"use strict";(self.webpackChunk_spaship_documentation=self.webpackChunk_spaship_documentation||[]).push([[17],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5023:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={id:"configuration",title:"Setup SPAship Engine",sidebar_label:"Configuration"},s={unversionedId:"getting-started/installation/bare-metal/configuration",id:"getting-started/installation/bare-metal/configuration",isDocsHomePage:!1,title:"Setup SPAship Engine",description:"Configuring SPAship for local development :",source:"@site/docs/getting-started/installation/bare-metal/configuration.md",sourceDirName:"getting-started/installation/bare-metal",slug:"/getting-started/installation/bare-metal/configuration",permalink:"/docs/getting-started/installation/bare-metal/configuration",editUrl:"https://github.com/spaship/spaship/tree/master/docusaurus/docs/getting-started/installation/bare-metal/configuration.md",version:"current",sidebar_label:"Configuration",frontMatter:{id:"configuration",title:"Setup SPAship Engine",sidebar_label:"Configuration"},sidebar:"docs",previous:{title:"Installation & getting acquainted with the CLI",permalink:"/docs/getting-started/installation/bare-metal/installation"},next:{title:"Quickstart",permalink:"/docs/guide/user-guide/Quickstart"}},u=[{value:"Configuring SPAship for local development :",id:"configuring-spaship-for-local-development-",children:[]}],c={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"configuring-spaship-for-local-development-"},"Configuring SPAship for local development :"),(0,o.kt)("p",null,"If you want to contribute to ",(0,o.kt)("em",{parentName:"p"},"SPAship"),", here's how to setup a local development environment.  Note, this relies on the ",(0,o.kt)("strong",{parentName:"p"},"internal SSO")," server, so you must be on the VPN."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step-by-step guide")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install and start mongodb, on the default port-27017"),(0,o.kt)("li",{parentName:"ol"},"Using git, clone a copy of the repo (if you aren't a member of the SPAship org, fork the repo and clone it)"),(0,o.kt)("li",{parentName:"ol"},"Download the attached .env file and copy it into the project's root directory. please consider having a look at ",(0,o.kt)("a",{parentName:"li",href:"https://docs.engineering.redhat.com/pages/viewpage.action?spaceKey=~mclayton&title=Configuring+SPAship+for+local+development+inside+the+VPN"},"this doc"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The configuration in this file is tailored to SPAship development inside Red Hat, and the configuration will only work if you're on the Red Hat VPN"),(0,o.kt)("li",{parentName:"ul"},"Feel free to customize it.  For example, if you need to use a remote mongodb, there are commented-out configuration values you can activate")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"sudo npx spandx init cp addhosts")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This will add some local development hostnames to /etc/hosts"),(0,o.kt)("li",{parentName:"ul"},"sudo is optional; if you run it without sudo it will simply print simple instructions rather than adding the entries directly to /etc/hosts")),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"npm install"),(0,o.kt)("li",{parentName:"ol"},"npm start")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This will launch the SPAship api, sync, router, and manager.  Alternatively, you can launch them each individually in four separate terminal windows, by cd'ing into packages/{api,sync,router,manager} and running npm start within each")))}p.isMDXComponent=!0}}]);