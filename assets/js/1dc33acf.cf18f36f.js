"use strict";(self.webpackChunk_spaship_documentation=self.webpackChunk_spaship_documentation||[]).push([[8],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||s;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2123:function(e,t,n){n.r(t),n.d(t,{default:function(){return c},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=["components"],o={id:"test-process",title:"QA Process for SPAship",sidebar_label:"Quality Assurance"},l={unversionedId:"qa-testing/test-process",id:"qa-testing/test-process",isDocsHomePage:!1,title:"Quality Assurance Process for SPAship",description:"*",source:"@site/docs/qa-testing/test-process.md",sourceDirName:"qa-testing",slug:"/qa-testing/test-process",permalink:"/docs/qa-testing/test-process",editUrl:"https://github.com/spaship/spaship/tree/master/docusaurus/docs/qa-testing/test-process.md",version:"current",sidebar_label:"Quality Assurance",frontMatter:{id:"test-process",title:"QA Process for SPAship",sidebar_label:"Quality Assurance"},sidebar:"docs",previous:{title:"SPAship Manager Workflow",permalink:"/docs/guide/dev-guide/manager-workflow"}},p=[{value:"Objective",id:"objective",children:[]},{value:"Need",id:"need",children:[]},{value:"Tools &amp; Technologies Used",id:"tools--technologies-used",children:[]},{value:"Reporting",id:"reporting",children:[]},{value:"Installation Procedure",id:"installation-procedure",children:[]},{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Setup",id:"setup",children:[]},{value:"Execute tests:",id:"execute-tests",children:[]},{value:"Execute single test:",id:"execute-single-test",children:[]},{value:"Reports",id:"reports",children:[]},{value:"Notification of Test Completion",id:"notification-of-test-completion",children:[]},{value:"Bots in place",id:"bots-in-place",children:[]},{value:"Manual Testing Process",id:"manual-testing-process",children:[]},{value:"Application URLs to be Used by QA",id:"application-urls-to-be-used-by-qa",children:[]},{value:"Supporting Documents and URLs",id:"supporting-documents-and-urls",children:[]}],u={toc:p};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"objective"},"Objective"),(0,s.kt)("hr",null),(0,s.kt)("p",null,"To have a Quality assurance process in place for testing the SPAship Manager and SPAShip Orchestrator"),(0,s.kt)("h2",{id:"need"},"Need"),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"To have an automation testing framework setup for testing the SPAship Manager and SPAship Operator functionalities. "),(0,s.kt)("li",{parentName:"ul"},"To have a process documentation of manual testing ")),(0,s.kt)("h2",{id:"tools--technologies-used"},"Tools & Technologies Used"),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"IDE- Visual Studio Code"),(0,s.kt)("li",{parentName:"ul"},"UI Testing Framework- Cypress "),(0,s.kt)("li",{parentName:"ul"},"Postman - For API Testing"),(0,s.kt)("li",{parentName:"ul"},"Gitlab- For maintaining the test code and used as the CI platform"),(0,s.kt)("li",{parentName:"ul"},"Newman- CLI version of Postman useful for integrating Postman with Gitlab")),(0,s.kt)("h2",{id:"reporting"},"Reporting"),(0,s.kt)("hr",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For Cypress- We are using mochawesome reports"),(0,s.kt)("li",{parentName:"ul"},"For Newman- HTML-extra reporting template(Open Source) is used")),(0,s.kt)("h2",{id:"installation-procedure"},"Installation Procedure"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("h2",{parentName:"li",id:"cypress-tests"},"Cypress Tests"),"UI tests for SPAship using Cypress")),(0,s.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,s.kt)("p",null,"NodeJs"),(0,s.kt)("h2",{id:"setup"},"Setup"),(0,s.kt)("p",null,"Initialize the package.json (This step should be executed only when setting up the project for the first time)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Run npm init")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Go through the series of questions that are asked and package.json will be created  ")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Install cypress using npm")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"npm install cypress --save-dev")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"In the package.json, in scripts object:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'"test:e2e": "cypress run",\n"test:e2e:browser": "cypress open \n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Setup Environment variables and other authentication related info")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"export CYPRESS_ENV=<envname>\nexport CYPRESS_USERNAME=<username>\nexport CYPRESS_PASSWORD=<password>\n")),(0,s.kt)("h2",{id:"execute-tests"},"Execute tests:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For headless:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"npm run test:e2e or\nnpx cypress run\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For headed interactive:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"npm run test:e2e:browser or\nnpx cypress open\n")),(0,s.kt)("h2",{id:"execute-single-test"},"Execute single test:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"npx cypress run --spec=<testfilename.js>\n")),(0,s.kt)("h2",{id:"reports"},"Reports"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Reporting config needs to be done in cypress.json file"),(0,s.kt)("li",{parentName:"ul"},"Click ",(0,s.kt)("a",{parentName:"li",href:"https://docs.cypress.io/guides/tooling/reporters#Installed-via-npm"},"here")," for more details on reporting")),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("h2",{parentName:"li",id:"postman"},"Postman"))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Download Postman from ",(0,s.kt)("a",{parentName:"li",href:"https://www.postman.com",title:"Postman"},"Postman")),(0,s.kt)("li",{parentName:"ul"},"Navigate to testing gitlab repo ",(0,s.kt)("a",{parentName:"li",href:"https://gitlab.cee.redhat.com/spaship/spaship-3.0-qa"},"TestRepo")),(0,s.kt)("li",{parentName:"ul"},"Download the SPAship_API_Final_Collection.postman_collection.json and import it in Postman ")),(0,s.kt)("h2",{id:"notification-of-test-completion"},"Notification of Test Completion"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"An email is triggered when the reports are generated containing the links to the url where the report is present"),(0,s.kt)("li",{parentName:"ul"},"An excel file is maintained containing the email addresses of the stakeholders to whom report has to be emailed")),(0,s.kt)("h2",{id:"bots-in-place"},"Bots in place"),(0,s.kt)("p",null,"A google chatbot has been configured that triggers notification whenever any push is made to the QA repository and upon change in the status of Pipeline configured"),(0,s.kt)("h2",{id:"manual-testing-process"},"Manual Testing Process"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Developer is supposed to move the issues to on QA in Jira"),(0,s.kt)("li",{parentName:"ul"},"Weekly once QA-dev sync up call to let the QA know what all tickets are planned for testing"),(0,s.kt)("li",{parentName:"ul"},"After the QA has completed testing, he/she would be moving it to the next stage as per workflow and giving a comment"),(0,s.kt)("li",{parentName:"ul"},"QA should be mentioning issues/bugs if found in testing in comments")),(0,s.kt)("h2",{id:"application-urls-to-be-used-by-qa"},"Application URLs to be Used by QA"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://spaship.qa.redhat.com"},"SPAship UI"))),(0,s.kt)("h2",{id:"supporting-documents-and-urls"},"Supporting Documents and URLs"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1FUED1-6cH6gZLJehQfQx74_6KpUcLA5u6tpjOl8xG5Q/edit",title:"Test Plan Document"},"TestPlan")," "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.google.c/om/spreadsheets/d/1RUkeRaOO0PsKfUS0FoKcuRnE4Vv1O-CptZ5SurdUzzk/edit#gid=0",title:"Test Cases"},"TestCases")," "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://gitlab.cee.redhat.com/spaship/spaship-3.0-qa",title:"Gitlab Repo Link"},"TestingGitLabRepo"))))}c.isMDXComponent=!0}}]);